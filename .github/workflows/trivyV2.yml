---
name: Trivy scan V2
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: 16 3 * * 4
permissions:
  contents: read
jobs:
  build:
    permissions:
      contents: read
      security-events: write
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 6
      - run: echo $SHA
        env:
          SHA: ${{ steps.short-sha.outputs.sha }}
      - run: echo $SHA
        env:
          SHA: ${{ env.SHA }}
      - name: Install ORAS
        id: oras
        uses: oras-project/setup-oras@v1
      - name: Authenticate to GHCR
        id: ghcr
        shell: bash
        run: |
          oras login ghcr.io \
            -u ${{ github.actor }} \
            -p ${{ github.token }}
      - name: Pull Trivy Images
        id: pullv0
        run: |
          oras pull ghcr.io/aquasecurity/trivy-db:2
          oras pull ghcr.io/aquasecurity/trivy-java-db:1

      - name: Push Trivy Images
        id: push
        run: |
          oras push ghcr.io/leto1210/docker-dnsmasq/.github/trivy-db:2 \
            db.tar.gz:application/vnd.aquasec.trivy.db.layer.v1.tar+gzip \
            --artifact-type application/vnd.aquasec.trivy.config.v1+json

          oras push ghcr.io/leto1210/docker-dnsmasq/.github/trivy-java-db:1 \
            javadb.tar.gz:application/vnd.aquasec.trivy.javadb.layer.v1.tar+gzip \
            --artifact-type application/vnd.aquasec.trivy.config.v1+json
      - name: Pull Trivy DBs from GHCR
        id: pullv1
        shell: bash
        run: |
          oras pull ghcr.io/leto1210/docker-dnsmasq/.github/trivy-db:2
          oras pull ghcr.io/leto1210/docker-dnsmasq/.github/trivy-java-db:1
      - name: Scan Container Image
        id: scan
        uses: aquasecurity/trivy-action@0.28.0
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/leto1210/docker-dnsmasq/trivy-db,public.ecr.aws/aquasecurity/trivy-db,ghcr.io/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: ghcr.io/leto1210/docker-dnsmasq/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db,ghcr.io/aquasecurity/trivy-java-db
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ github.token }}
        with:
          cache: true
          exit-code: 0
          image-ref: docker.io/leto1210/docker-dnsmasq:${{ env.sha }}
          format: sarif
          output: docker-dnsmasq_trivy-results.sarif
          severity: CRITICAL
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: docker-dnsmasq_trivy-results.sarif
          severity: CRITICAL,HIGH
